name: build

on:
  push:
    branches:
      - master
      - 3.0.x
    tags:
      - "v*"

jobs:
  prepare-release:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-20.04
    steps:
      - name: Clone project
        uses: actions/checkout@v3
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          body: ''
          prerelease: true
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: build-${{ matrix.os }}
    if: always()
    needs: prepare-release
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        include:
          - os: ubuntu-20.04
            asset_name: vlc-linux-x86-64
          - os: macos-latest
            asset_name: vlc-macos-aarch64
          - os: macos-13
            asset_name: vlc-macos-x86-64
          # - os: windows-latest
          #   asset_name: vlc-windows-x86-64
    steps:
      - name: Clone project
        uses: actions/checkout@v3

      # - name: Setup Java
      #   if: startsWith(github.ref, 'refs/tags/v')
      #   uses: actions/setup-java@v3
      #   with:
      #     distribution: 'corretto'
      #     java-version: '17'
      #     cache: 'gradle'

      # / Unix
      - name: macos build
        id: mac_build
        if: matrix.os == 'macos-latest' || matrix.os == 'macos-13'
        shell: bash
        run: |
          mkdir build
          cd build
          ../extras/package/macosx/build.sh
          mkdir build
          cd build
          ../extras/package/macosx/build.sh -c
          mkdir zip
          cp -r VLC.app bin/.libs/vlc-cache-gen zip
          cd zip
          zip -r archive.zip VLC.app vlc-cache-gen
          path=$(realpath archive.zip)
          echo "build_path=$path" >> $GITHUB_OUTPUT

      - name: Mac upload desktop package to release
        if: startsWith(github.ref, 'refs/tags/v') && (matrix.os == 'macos-latest' || matrix.os == 'macos-13')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ steps.mac_build.outputs.build_path }}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref }}
